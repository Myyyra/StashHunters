{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\OneDrive\\\\Tiedostot\\\\GitHub\\\\StashHunters\\\\App\\\\components\\\\MapScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport CreateNewStash from \"./CreateNewStash\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\n  authDomain: \"stashhunters.firebaseapp.com\",\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\n  projectId: \"stashhunters\",\n  storageBucket: \"stashhunters.appspot.com\",\n  messagingSenderId: \"220185997672\",\n  appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\n  measurementId: \"G-NEN89Q25YP\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: 400,\n    width: 400,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default function MapScreen() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(60.201313),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latitude = _useState6[0],\n      setLatitude = _useState6[1];\n\n  var _useState7 = useState(24.934041),\n      _useState8 = _slicedToArray(_useState7, 2),\n      longitude = _useState8[0],\n      setLongitude = _useState8[1];\n\n  var _useState9 = useState(0.0001),\n      _useState10 = _slicedToArray(_useState9, 2),\n      maprange = _useState10[0],\n      setMapRange = _useState10[1];\n\n  var _useState11 = useState(Location.PermissionStatus.UNDETERMINED),\n      _useState12 = _slicedToArray(_useState11, 2),\n      permission = _useState12[0],\n      setPermission = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      stashes = _useState14[0],\n      setStashes = _useState14[1];\n\n  var _useState15 = useState({\n    latitude: 60.200692,\n    longitude: 24.934302,\n    latitudeDelta: 0.0222,\n    longitudeDelta: 0.0121\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      region = _useState16[0],\n      setRegion = _useState16[1];\n\n  useEffect(function () {\n    getStashes();\n\n    (function _callee() {\n      var _await$Location$reque, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status === 'granted') {\n                setPermission('granted');\n                getCurrentLocation();\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var getCurrentLocation = function getCurrentLocation() {\n    var location;\n    return _regeneratorRuntime.async(function getCurrentLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 2:\n            location = _context2.sent;\n            setLocation(location);\n            setLatitude(location.coords.latitude);\n            setLongitude(location.coords.longitude);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getStashes = function getStashes() {\n    firebase.database().ref('/stashes').on('value', function (snapshot) {\n      var data = snapshot.val();\n      var s = Object.values(data);\n      setStashes(s);\n    });\n  };\n\n  var saveStash = function saveStash() {\n    (function _callee2() {\n      var userMsg, desc, LatLong;\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (permission === 'granted') {\n                getCurrentLocation();\n                userMsg = \"täällä ollaan\";\n                desc = \"puisto\";\n                LatLong = {\n                  latitude: latitude,\n                  longitude: longitude\n                };\n                firebase.database().ref('stashes/').push({\n                  latlong: LatLong,\n                  title: userMsg,\n                  description: desc\n                });\n              } else {\n                setErrorMsg('Permission to access location was denied');\n                Alert.alert('Permission to access location was denied');\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  return React.createElement(View, {\n    style: styles.map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, stashes.map(function (stash, index) {\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: {\n        latitude: parseFloat(stash.latitude),\n        longitude: parseFloat(stash.longitude)\n      },\n      title: stash.title,\n      description: stash.description,\n      image: require(\"../assets/flag.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/henri/OneDrive/Tiedostot/GitHub/StashHunters/App/components/MapScreen.js"],"names":["StatusBar","React","useEffect","useState","firebase","MapView","Marker","Location","CreateNewStash","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","styles","StyleSheet","create","container","absoluteFillObject","height","width","justifyContent","alignItems","map","MapScreen","location","setLocation","errorMsg","setErrorMsg","latitude","setLatitude","longitude","setLongitude","maprange","setMapRange","PermissionStatus","UNDETERMINED","permission","setPermission","stashes","setStashes","latitudeDelta","longitudeDelta","region","setRegion","getStashes","requestPermissionsAsync","status","getCurrentLocation","getCurrentPositionAsync","coords","database","ref","on","snapshot","data","val","s","Object","values","saveStash","userMsg","desc","LatLong","push","latlong","title","description","Alert","alert","stash","index","parseFloat","require"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Alert, Button } from 'react-native';\r\nimport * as firebase from 'firebase';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport * as Location from 'expo-location';\r\nimport CreateNewStash from './CreateNewStash';\r\n\r\n\r\n//TODO: encrypt\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\r\n  authDomain: \"stashhunters.firebaseapp.com\",\r\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\r\n  projectId: \"stashhunters\",\r\n  storageBucket: \"stashhunters.appspot.com\",\r\n  messagingSenderId: \"220185997672\",\r\n  appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\r\n  measurementId: \"G-NEN89Q25YP\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    height: 400,\r\n    width: 400,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  map: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n});\r\n\r\nexport default function MapScreen() {\r\n\r\n  const [location, setLocation] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [latitude, setLatitude] = useState(60.201313);\r\n  const [longitude, setLongitude] = useState(24.934041);\r\n  const [maprange, setMapRange] = useState(0.0001);\r\n  const [permission, setPermission] = useState(Location.PermissionStatus.UNDETERMINED);\r\n  const [stashes, setStashes] = useState([]);\r\n\r\n  const [region, setRegion] = useState({\r\n    latitude: 60.200692,\r\n    longitude: 24.934302,\r\n    latitudeDelta: 0.0222,\r\n    longitudeDelta: 0.0121\r\n  });\r\n\r\n  //check if app is allowed to use location when started\r\n  useEffect(() => {\r\n\r\n    getStashes();\r\n\r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status === 'granted') {\r\n        setPermission('granted');\r\n        getCurrentLocation();\r\n\r\n\r\n\r\n      }\r\n    })();\r\n\r\n\r\n  }, []);\r\n\r\n  const getCurrentLocation = async () => {\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    setLocation(location);\r\n\r\n    setLatitude(location.coords.latitude);\r\n    setLongitude(location.coords.longitude);\r\n  }\r\n\r\n  const getStashes = () => {\r\n    firebase.database()\r\n      .ref('/stashes')\r\n      .on('value', snapshot => {\r\n        const data = snapshot.val();\r\n        const s = Object.values(data);\r\n        setStashes(s);\r\n      });\r\n  }\r\n\r\n  const saveStash = () => {\r\n    (async () => {\r\n      if (permission === 'granted') {\r\n        getCurrentLocation();\r\n\r\n        let userMsg = \"täällä ollaan\";\r\n        let desc = \"puisto\"\r\n        let LatLong = {\r\n          latitude: latitude,\r\n          longitude: longitude\r\n        }\r\n\r\n        firebase.database().ref('stashes/').push(\r\n          {\r\n            latlong: LatLong,\r\n            title: userMsg,\r\n            description: desc\r\n          }\r\n        );\r\n        //if no permission to location, give error msg\r\n      } else {\r\n        setErrorMsg('Permission to access location was denied');\r\n        Alert.alert('Permission to access location was denied');\r\n      }\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <View style={styles.map}>\r\n\r\n      <MapView\r\n        style={styles.map}\r\n        region={region} >\r\n\r\n\r\n\r\n        {stashes.map((stash, index) => (\r\n\r\n          <Marker\r\n            key={index}\r\n\r\n            coordinate={{ latitude: parseFloat(stash.latitude), longitude: parseFloat(stash.longitude) }}\r\n\r\n            title={stash.title}\r\n            description={stash.description}\r\n\r\n            image={require('../assets/flag.png')}\r\n          />\r\n        ))}\r\n\r\n      </MapView>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}