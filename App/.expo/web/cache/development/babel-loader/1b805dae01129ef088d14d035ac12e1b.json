{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\OneDrive\\\\Tiedostot\\\\GitHub\\\\StashHunters\\\\App\\\\components\\\\CreateNewStash.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\n  authDomain: \"stashhunters.firebaseapp.com\",\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\n  projectId: \"stashhunters\",\n  storageBucket: \"stashhunters.appspot.com\",\n  messagingSenderId: \"220185997672\",\n  appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\n  measurementId: \"G-NEN89Q25YP\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nexport default function CreateNewStash(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(60.201313),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latitude = _useState6[0],\n      setLatitude = _useState6[1];\n\n  var _useState7 = useState(24.934041),\n      _useState8 = _slicedToArray(_useState7, 2),\n      longitude = _useState8[0],\n      setLongitude = _useState8[1];\n\n  var saveAndRedirect = function saveAndRedirect() {\n    saveStash();\n    Alert.alert(\"Stash saved\");\n    setTitle('');\n    setDesc('');\n    setLatitude('');\n    setLongitude('');\n    navigation.navigate('MapScreen');\n  };\n\n  var saveStash = function saveStash() {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              firebase.database().ref('stashes/').push({\n                latitude: latitude,\n                longitude: longitude,\n                title: title,\n                description: desc\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Create new stash\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(title) {\n      return setTitle(title);\n    },\n    value: title,\n    placeholder: \"Stash name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(desc) {\n      return setDesc(desc);\n    },\n    value: desc,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(latitude) {\n      return setLatitude(latitude);\n    },\n    value: latitude,\n    placeholder: \"Latitude\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(longitude) {\n      return setLongitude(longitude);\n    },\n    value: longitude,\n    placeholder: \"Longitude\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: saveAndRedirect,\n    title: \"Save\",\n    color: \"#029B76\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: 400,\n    width: 400,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }),\n  input: {\n    width: 200,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingLeft: 10,\n    margin: 10\n  },\n  button: {}\n});","map":{"version":3,"sources":["C:/Users/henri/OneDrive/Tiedostot/GitHub/StashHunters/App/components/CreateNewStash.js"],"names":["React","useState","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","CreateNewStash","navigation","title","setTitle","desc","setDesc","latitude","setLatitude","longitude","setLongitude","saveAndRedirect","saveStash","Alert","alert","navigate","database","ref","push","description","styles","container","input","StyleSheet","create","absoluteFillObject","height","width","justifyContent","alignItems","borderColor","borderWidth","paddingLeft","margin","button"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport { StyleSheet, Text, View, Alert, Button, TextInput } from 'react-native';\r\nimport * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\r\n    authDomain: \"stashhunters.firebaseapp.com\",\r\n    databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\r\n    projectId: \"stashhunters\",\r\n    storageBucket: \"stashhunters.appspot.com\",\r\n    messagingSenderId: \"220185997672\",\r\n    appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\r\n    measurementId: \"G-NEN89Q25YP\"\r\n  };\r\n  \r\n  //initialize connection to database\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  } else {\r\n    firebase.app(); // if already initialized, use that one\r\n  } \r\n\r\nexport default function CreateNewStash({navigation}) {\r\n    \r\n    //initialize states for creating a new stash\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [latitude, setLatitude] = useState(60.201313);\r\n    const [longitude, setLongitude] = useState(24.934041);\r\n\r\n    //when save-button is pressed, save the new stash, inform the player that\r\n    //saving was successful, and redirect to map view\r\n    const saveAndRedirect = () => {\r\n        saveStash();\r\n        Alert.alert(\"Stash saved\");\r\n        setTitle('');\r\n        setDesc('');\r\n        setLatitude('');\r\n        setLongitude('');\r\n        navigation.navigate('MapScreen');\r\n    }\r\n\r\n    //save the created stash to database\r\n    const saveStash = () => {\r\n        (async () => {            \r\n    \r\n            firebase.database().ref('stashes/').push(\r\n                {\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n                title: title,\r\n                description: desc\r\n                }\r\n            );         \r\n        })();\r\n        }\r\n    \r\n    return(\r\n        <View style = {styles.container}>\r\n            <Text>Create new stash</Text>\r\n            <TextInput  \r\n                style = {styles.input}\r\n                onChangeText = {title => setTitle(title)}\r\n                value={title}\r\n                placeholder='Stash name'\r\n            />\r\n            <TextInput  \r\n                style = {styles.input}\r\n                onChangeText = {desc => setDesc(desc)}\r\n                value={desc}\r\n                placeholder='Description'\r\n            />\r\n\r\n            <TextInput  \r\n                style = {styles.input}\r\n                onChangeText = {latitude => setLatitude(latitude)}\r\n                value={latitude}\r\n                placeholder='Latitude'\r\n            />\r\n\r\n            <TextInput  \r\n                style = {styles.input}\r\n                onChangeText = {longitude => setLongitude(longitude)}\r\n                value={longitude}\r\n                placeholder='Longitude'\r\n            />\r\n            <Button \r\n                onPress = {saveAndRedirect}\r\n                title = \"Save\" \r\n                color='#029B76'\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      ...StyleSheet.absoluteFillObject,\r\n      height: 400,\r\n      width: 400,\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'center',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        paddingLeft: 10,\r\n        margin: 10\r\n    },\r\n    button: {\r\n\r\n    }\r\n   });"]},"metadata":{},"sourceType":"module"}