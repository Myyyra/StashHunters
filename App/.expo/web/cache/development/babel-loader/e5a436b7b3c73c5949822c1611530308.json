{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\OneDrive\\\\Tiedostot\\\\GitHub\\\\StashHunters\\\\App\\\\components\\\\StashListView.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport * as firebase from 'firebase';\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\n  authDomain: \"stashhunters.firebaseapp.com\",\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\n  projectId: \"stashhunters\",\n  storageBucket: \"stashhunters.appspot.com\",\n  messagingSenderId: \"220185997672\",\n  appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\n  measurementId: \"G-NEN89Q25YP\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nexport default function MapScreen() {\n  var _this = this;\n\n  var _useState = useState(Location.PermissionStatus.UNDETERMINED),\n      _useState2 = _slicedToArray(_useState, 2),\n      permission = _useState2[0],\n      setPermission = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stashes = _useState4[0],\n      setStashes = _useState4[1];\n\n  useEffect(function () {\n    getStashes();\n\n    (function _callee() {\n      var _await$Location$reque, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status === 'granted') {\n                setPermission('granted');\n                getCurrentLocation();\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var getCurrentLocation = function getCurrentLocation() {\n    var location;\n    return _regeneratorRuntime.async(function getCurrentLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 2:\n            location = _context2.sent;\n            setLocation(location);\n            setLatitude(location.coords.latitude);\n            setLongitude(location.coords.longitude);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getStashes = function getStashes() {\n    firebase.database().ref('/stashes').on('value', function (snapshot) {\n      var data = snapshot.val();\n      var s = Object.values(data);\n      setStashes(s);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 28,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Nearby Stashes\")), React.createElement(View, {\n    style: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.listcontainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, item.title), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, item.description));\n    },\n    data: stashes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  title: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  list: {\n    flex: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  listcontainer: {\n    width: 350,\n    borderWidth: 2,\n    marginBottom: 10,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/henri/OneDrive/Tiedostot/GitHub/StashHunters/App/components/StashListView.js"],"names":["StatusBar","React","useEffect","useState","firebase","MapView","Marker","Location","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","MapScreen","PermissionStatus","UNDETERMINED","permission","setPermission","stashes","setStashes","getStashes","requestPermissionsAsync","status","getCurrentLocation","getCurrentPositionAsync","location","setLocation","setLatitude","coords","latitude","setLongitude","longitude","database","ref","on","snapshot","data","val","s","Object","values","styles","container","title","fontSize","fontWeight","list","item","index","toString","listcontainer","description","StyleSheet","create","flex","justifyContent","alignItems","width","borderWidth","marginBottom","padding"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View, Alert, Button, FlatList } from 'react-native';\r\nimport * as firebase from 'firebase';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport * as Location from 'expo-location';\r\n\r\n//TODO: encrypt\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAVAQVZTPJGg4LcRsOe2-jOv9iL_D2l03A\",\r\n  authDomain: \"stashhunters.firebaseapp.com\",\r\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com\",\r\n  projectId: \"stashhunters\",\r\n  storageBucket: \"stashhunters.appspot.com\",\r\n  messagingSenderId: \"220185997672\",\r\n  appId: \"1:220185997672:web:4c44ff88c7def725a9e6dd\",\r\n  measurementId: \"G-NEN89Q25YP\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n} \r\n\r\nexport default function MapScreen() {\r\n  \r\n  const [permission, setPermission] = useState(Location.PermissionStatus.UNDETERMINED);\r\n  const [stashes, setStashes] = useState([]);\r\n\r\n\r\n  //check if app is allowed to use location when started\r\n  useEffect(() => {\r\n\r\n    getStashes();\r\n\r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status === 'granted') {\r\n        setPermission('granted');\r\n        getCurrentLocation();\r\n      }\r\n    })();\r\n\r\n    \r\n  }, []);\r\n\r\n  const getCurrentLocation = async () => {\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    setLocation(location);\r\n      \r\n    setLatitude(location.coords.latitude);\r\n    setLongitude(location.coords.longitude);\r\n  }\r\n\r\n  const getStashes = () => {\r\n    firebase.database()\r\n        .ref('/stashes')\r\n        .on('value', snapshot => {\r\n          const data = snapshot.val();\r\n          const s = Object.values(data);\r\n          setStashes(s);\r\n        });\r\n  }\r\n  \r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <View style={styles.title}>\r\n            <Text style={{fontSize: 28, fontWeight: 'bold'}}>Nearby Stashes</Text>\r\n        </View>\r\n        <View style={styles.list}>\r\n            <FlatList \r\n            keyExtractor={(item, index) => index.toString()} \r\n            renderItem={({item}) => <View style={styles.listcontainer}>\r\n                <Text style={{fontSize: 24, fontWeight: 'bold'}}>{item.title}</Text>\r\n                <Text style={{fontSize: 18}}>{item.description}</Text>\r\n            </View>} \r\n            data={stashes} \r\n            /> \r\n        </View>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1\r\n    },\r\n    title: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    list: {\r\n        flex: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    listcontainer: {\r\n        width: 350,\r\n        borderWidth: 2,\r\n        marginBottom: 10,\r\n        padding: 5\r\n    }\r\n\r\n\r\n\r\n   });"]},"metadata":{},"sourceType":"module"}