{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\henri\\\\stashhunt\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport * as Permissions from 'expo-permissions';\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport Geolocation from \"react-native-geolocation-service\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyASqO9wJOkRQjhDAFeP2_JFYkK9wriEnUo\",\n  authDomain: \"stashhunters.firebaseapp.com\",\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com/\",\n  projectId: \"stashhunters\",\n  storageBucket: \"stashhunters.appspot.com\",\n  messagingSenderId: \"220185997672\",\n  appId: '1:220185997672:android:690340e1588b24eea9e6dd'\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: 400,\n    width: 400,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(60.201313),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latitude = _useState6[0],\n      setLatitude = _useState6[1];\n\n  var _useState7 = useState(24.934041),\n      _useState8 = _slicedToArray(_useState7, 2),\n      longitude = _useState8[0],\n      setLongitude = _useState8[1];\n\n  var _useState9 = useState(0.0001),\n      _useState10 = _slicedToArray(_useState9, 2),\n      maprange = _useState10[0],\n      setMapRange = _useState10[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n              setLatitude(location.coords.latitude);\n              setLongitude(location.coords.longitude);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  var getLocation = function getLocation() {};\n\n  var saveStash = function saveStash() {\n    (function _callee2() {\n      var _await$Location$reque2, status, location;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque2 = _context2.sent;\n              status = _await$Location$reque2.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context2.sent;\n              setLocation(location);\n              setLatitude(location.coords.latitude);\n              setLongitude(location.coords.longitude);\n              Alert.alert(\"tässä olet \" + latitude + \" : \" + longitude);\n              firebase.database().ref('stashes/').push({\n                location: location\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  useEffect(function () {\n    saveStash;\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: {\n      latitude: latitude + maprange,\n      longitude: longitude + maprange,\n      latitudeDelta: 0.0322,\n      longitudeDelta: 0.0221\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: latitude,\n      longitude: longitude\n    },\n    title: \"Haaga-Helia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"UploadLocation\",\n    onPress: saveStash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/henri/stashhunt/App.js"],"names":["StatusBar","React","useEffect","useState","firebase","Permissions","MapView","Marker","Location","Geolocation","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","app","absoluteFillObject","position","left","right","top","bottom","styles","StyleSheet","create","container","height","width","justifyContent","alignItems","map","App","location","setLocation","errorMsg","setErrorMsg","latitude","setLatitude","longitude","setLongitude","maprange","setMapRange","requestPermissionsAsync","status","getCurrentPositionAsync","coords","text","JSON","stringify","getLocation","saveStash","Alert","alert","database","ref","push","latitudeDelta","longitudeDelta"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect, useState} from 'react';\nimport { StyleSheet, Text, View, Alert, Button } from 'react-native';\nimport * as firebase from 'firebase';\nimport * as Permissions from 'expo-permissions'\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport Geolocation from \"react-native-geolocation-service\";\n\nconst firebaseConfig = {\n  \n  apiKey: \"AIzaSyASqO9wJOkRQjhDAFeP2_JFYkK9wriEnUo\",\n  authDomain: \"stashhunters.firebaseapp.com\",\n  databaseURL: \"https://stashhunters-default-rtdb.firebaseio.com/\",\n  projectId: \"stashhunters\",\n  storageBucket: \"stashhunters.appspot.com\",\n  messagingSenderId: \"220185997672\",\n  appId: '1:220185997672:android:690340e1588b24eea9e6dd'\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}else {\n  firebase.app(); // if already initialized, use that one\n} \n\nconst absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    height: 400,\n    width: 400,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    ...StyleSheet.absoluteFillObject,\n  },\n });\n\n\nexport default function App() {\n  \n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [latitude, setLatitude] = useState(60.201313);\n  const [longitude, setLongitude] = useState(24.934041);\n  const [maprange, setMapRange] = useState(0.0001)\n\n\n  //tee että tämä alla oleva async juttu tehdään vain nappia painaessa \n  //laita async osuus funktion sisään jota kutsutaan kun painaa uploadlocation\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n\n      setLatitude(location.coords.latitude);\n      setLongitude(location.coords.longitude);\n      \n    })();\n  }, []);\n\n  let text = 'Waiting..';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  const getLocation = () => {\n    \n\n  }\n\n  \n\n  const saveStash = () => {\n\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n  \n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n      \n      setLatitude(location.coords.latitude);\n      setLongitude(location.coords.longitude);\n\n      Alert.alert(\"tässä olet \" + latitude + \" : \" + longitude);\n\n      firebase.database().ref('stashes/').push(\n          {\n            location\n          }\n      );\n\n    })();\n    }\n  \n    text = 'Waiting..';\n    if (errorMsg) {\n      text = errorMsg;\n    } else if (location) {\n      text = JSON.stringify(location);\n\n    \n    \n    \n    //Alert.alert(\"heitetty firebaseen\");\n  }\n\n  useEffect(() => {saveStash}, []);\n\n  return (\n    <View style={styles.container}>\n    \n      <MapView\n        style={styles.map}\n        region={{\n          latitude: latitude + maprange,\n          longitude: longitude + maprange,\n          latitudeDelta: 0.0322,\n          longitudeDelta: 0.0221,\n      }} >\n\n      <Marker\n        coordinate={{\n          latitude: latitude, \n          longitude: longitude}}\n          title='Haaga-Helia' />\n      \n      </MapView>\n      \n\n      <Text></Text>\n      <Button title=\"UploadLocation\" onPress={saveStash} />\n      <StatusBar style=\"auto\" />\n    </View>\n\n    \n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}